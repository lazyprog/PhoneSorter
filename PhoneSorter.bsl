Функция СортироватьМассив(ВходнойМассив)
	ТабСортировки = Новый ТаблицаЗначений();
	ТабСортировки.Колонки.Добавить("Номер");
	ТабСортировки.Колонки.Добавить("Длина");
	Для Каждого Элем из ВходнойМассив Цикл
		СтрТаб = ТабСортировки.Добавить();
		СтрТаб.Номер = Элем;
		СтрТаб.Длина = СтрДлина(Элем);
	КонецЦикла;
	ТабСортировки.Сортировать("Длина,Номер");
	Возврат ТабСортировки.ВыгрузитьКолонку("Номер");
	// Возврат ВходнойМассив;
КонецФункции

Функция ПроверитьФайл(ПараметрыФайла)
	Файл = Новый Файл(ПараметрыФайла.ПолныйПутьНачальный);
	Если Не Файл.Существует() Тогда
		Возврат Ложь;
	КонецЕсли;
	ПараметрыФайла.Вставить("ИмяБезРасширения", Файл.ИмяБезРасширения);
	ПараметрыФайла.Вставить("Расширение", Файл.Расширение);
	ПараметрыФайла.Вставить("Путь", Файл.Путь);
	ПараметрыФайла.Вставить("ПолноеИмя", Файл.ПолноеИмя);
	Возврат Истина;
КонецФункции

Функция ПолучитьПутьКФайлу()
	
	// Получим путь к файлу из коммандной строки
	Если АргументыКоманднойСтроки.Количество() = 0 Тогда
		ТекстСообщения = "##############################################
			|#	Укажите имя файла
			|#";
		Сообщить(ТекстСообщения);
		Возврат Неопределено;
	КонецЕсли;
	СтрокаПутьКФайлу = СокрЛП(АргументыКоманднойСтроки[0]);
	
	// Проверим наличие файла по указанному пути и прочитаем необходимые параметры
	ПараметрыФайла = Новый Структура("ПолныйПутьНачальный", СтрокаПутьКФайлу);
	Если НЕ ПроверитьФайл(ПараметрыФайла) Тогда
		ТекстСообщения = СтрШаблон("Не найден файл: %1", СтрокаПутьКФайлу);
		Сообщить(ТекстСообщения);
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ПараметрыФайла;
	
КонецФункции

Функция ОбработатьНомер(СтрокаИзФайла)
	
	// Уберем символы "тире" "пробел" "скобки"
	СтрокаИзФайла = СтрЗаменить(СтрокаИзФайла,"-","");
	СтрокаИзФайла = СтрЗаменить(СтрокаИзФайла," ","");
	СтрокаИзФайла = СтрЗаменить(СтрокаИзФайла,"(","");
	СтрокаИзФайла = СтрЗаменить(СтрокаИзФайла,")","");
	
	// Уберем лидирующий плюс
	Если Лев(СтрокаИзФайла, 1) = "+" Тогда
		СтрокаИзФайла = Сред(СтрокаИзФайла, 2);
	КонецЕсли;
	
	// Отфильтруем по длине номера, только 10 и 11 знаков
	ДлинаНомера = СтрДлина(СтрокаИзФайла);
	Если ДлинаНомера < 10 ИЛИ ДлинаНомера > 11 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Отбросим все что начинаются на "0"
	Если Лев(СтрокаИзФайла, 1) = "0" Тогда
		Возврат Ложь;
	КонецЕсли;

	// Отбросим длинные номера, которые начинаются не на 7 или 8
	Если ДлинаНомера = 11 Тогда
		ПервыйСимвол = Лев(СтрокаИзФайла,1);
		Если ПервыйСимвол <> "7" и ПервыйСимвол<>"8" Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	// Отбросим все с повторяющимися цифрами
	КолВоПовторенийПоследнейЦифры = СтрЧислоВхождений(СтрокаИзФайла, Прав(СтрокаИзФайла, 1));
	Если КолВоПовторенийПоследнейЦифры = ДлинаНомера ИЛИ
		КолВоПовторенийПоследнейЦифры = ДлинаНомера - 1 ИЛИ
		КолВоПовторенийПоследнейЦифры = ДлинаНомера - 2 ИЛИ
		КолВоПовторенийПоследнейЦифры = ДлинаНомера - 3 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СтрокаЦифр = "0123456789";
	Для Инд = 1 По СтрДлина(СтрокаИзФайла) Цикл
		ТекСимв = Сред(СтрокаИзФайла, Инд, 1);
		Если СтрНайти(СтрокаЦифр, ТекСимв) = 0 Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	// Преобразование номера
	
	Если ДлинаНомера = 10 Тогда
		СтрокаИзФайла = "7" + СтрокаИзФайла;
	КонецЕсли;
	
	Если Лев(СтрокаИзФайла, 1) = "8" Тогда
		СтрокаИзФайла = "7" + Сред(СтрокаИзФайла, 2);
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ПолучитьКодыСимволовНомераИзМассиваНомеров(СтрНомер)
	СтрКодов = "";
	Для Инд = 1 По СтрДлина(СтрНомер) Цикл
		КодСимв = КодСимвола(СтрНомер, Инд);
		СтрКодов = СтрКодов + Строка(КодСимв);
		Если КодСимв < 48 И КодСимв > 57 Тогда
			//это НЕ число
			//Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	Возврат СтрКодов;
КонецФункции

Процедура ВыполнитьОбработкуФайла()
	
	МассивНомеров = Новый Массив();
	МассивИсключений = Новый Массив();
	
	ПараметрыФайла = ПолучитьПутьКФайлу();
	ПутьФайл = ПараметрыФайла.ПолноеИмя;
	
	ТекстДокумент = Новый ЧтениеТекста;
	ТекстДокумент.Открыть(ПутьФайл);
	КолВоНомеровВИсходнике = 0;
	Пока Истина Цикл
		Стр = ТекстДокумент.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;
		КолВоНомеровВИсходнике = КолВоНомеровВИсходнике + 1;
		СтрокаНомер = СокрЛП(Стр);
		Если ОбработатьНомер(СтрокаНомер) Тогда
			МассивНомеров.Добавить(СтрокаНомер);
		Иначе
			МассивИсключений.Добавить(СтрокаНомер);
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстСообщения = СтрШаблон("Всего: %1, корректных: %2, исключено %3",
			СокрЛП(КолВоНомеровВИсходнике),
			СокрЛП(МассивНомеров.Количество()),
			СокрЛП(МассивИсключений.Количество()));
	Сообщить(ТекстСообщения);
	
	МассивНомеров = СортироватьМассив(МассивНомеров);
	МассивИсключений = СортироватьМассив(МассивИсключений);
	
	// Запишем массив корректных номеров в файл
	ИмяФайлаРезультат = ПараметрыФайла.ИмяБезРасширения + "_right.txt";
	ПутьФайлРезультат = ОбъединитьПути(ПараметрыФайла.Путь, ИмяФайлаРезультат);
	ТекстРезультат = Новый ЗаписьТекста(ПутьФайлРезультат);
	Для каждого Элем Из МассивНомеров Цикл
		ТекстРезультат.ЗаписатьСтроку(Элем);
	КонецЦикла;
	Сообщить(СтрШаблон("Файл с правильными номерами: %1", ПутьФайлРезультат));
	
	// Запишем массив ошибочных номеров в файл
	ИмяФайлаРезультат = ПараметрыФайла.ИмяБезРасширения + "_wrong.txt";
	ПутьФайлРезультат = ОбъединитьПути(ПараметрыФайла.Путь, ИмяФайлаРезультат);
	ТекстРезультат = Новый ЗаписьТекста(ПутьФайлРезультат);
	Для каждого Элем Из МассивИсключений Цикл
		ТекстРезультат.ЗаписатьСтроку(Элем);
	КонецЦикла;
	Сообщить(СтрШаблон("Файл с ошибочными номерами: %1", ПутьФайлРезультат));
КонецПроцедуры


ВыполнитьОбработкуФайла();
Сообщить("Работа завершена");